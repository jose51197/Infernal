--- drivers/thermal/msm_thermal.c
+++ drivers/thermal/msm_thermal.c
@@ -21,62 +21,22 @@
 #include <linux/cpu.h>
 
 #define DEF_TEMP_SENSOR      0
-
-//max thermal limit
-#define DEF_ALLOWED_MAX_HIGH 76
-#define DEF_ALLOWED_MAX_FREQ 384000
-
-//mid thermal limit
-#define DEF_ALLOWED_MID_HIGH 72
-#define DEF_ALLOWED_MID_FREQ 648000
-
-//low thermal limit
-#define DEF_ALLOWED_LOW_HIGH 70
-#define DEF_ALLOWED_LOW_FREQ 972000
-
-//Sampling interval
 #define DEF_THERMAL_CHECK_MS 1000
+#define DEF_ALLOWED_MAX_HIGH 60
+#define DEF_ALLOWED_MAX_FREQ 918000
 
 static int enabled;
+static int allowed_max_high = DEF_ALLOWED_MAX_HIGH;
+static int allowed_max_low = (DEF_ALLOWED_MAX_HIGH - 10);
+static int allowed_max_freq = DEF_ALLOWED_MAX_FREQ;
+static int check_interval_ms = DEF_THERMAL_CHECK_MS;
 
-//Throttling indicator, 0=not throttled, 1=low, 2=mid, 3=max
-static int thermal_throttled = 0;
-
-//Safe the cpu max freq before throttling
-static int pre_throttled_max = 0;
+module_param(allowed_max_high, int, 0);
+module_param(allowed_max_freq, int, 0);
+module_param(check_interval_ms, int, 0);
 
 static struct delayed_work check_temp_work;
 
-static struct msm_thermal_tuners {
-	unsigned int allowed_max_high;
-	unsigned int allowed_max_low;
-	unsigned int allowed_max_freq;
-
-	unsigned int allowed_mid_high;
-	unsigned int allowed_mid_low;
-	unsigned int allowed_mid_freq;
-
-	unsigned int allowed_low_high;
-	unsigned int allowed_low_low;
-	unsigned int allowed_low_freq;
-
-	unsigned int check_interval_ms;
-} msm_thermal_tuners_ins = {
-	.allowed_max_high = DEF_ALLOWED_MAX_HIGH,
-	.allowed_max_low = (DEF_ALLOWED_MAX_HIGH - 5),
-	.allowed_max_freq = DEF_ALLOWED_MAX_FREQ,
-
-	.allowed_mid_high = DEF_ALLOWED_MID_HIGH,
-	.allowed_mid_low = (DEF_ALLOWED_MID_HIGH - 5),
-	.allowed_mid_freq = DEF_ALLOWED_MID_FREQ,
-
-	.allowed_low_high = DEF_ALLOWED_LOW_HIGH,
-	.allowed_low_low = (DEF_ALLOWED_LOW_HIGH - 6),
-	.allowed_low_freq = DEF_ALLOWED_LOW_FREQ,
-
-	.check_interval_ms = DEF_THERMAL_CHECK_MS,
-};
-
 static int update_cpu_max_freq(struct cpufreq_policy *cpu_policy,
 			       int cpu, int max_freq)
 {
