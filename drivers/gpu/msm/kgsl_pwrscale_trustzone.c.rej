--- drivers/gpu/msm/kgsl_pwrscale_trustzone.c
+++ drivers/gpu/msm/kgsl_pwrscale_trustzone.c
@@ -439,13 +421,7 @@
 {
 	struct tz_priv *priv = pwrscale->priv;
 	if (device->state != KGSL_STATE_NAP &&
-#ifdef CONFIG_MSM_KGSL_SIMPLE_GOV
-		(priv->governor == TZ_GOVERNOR_ONDEMAND ||
-		 priv->governor == TZ_GOVERNOR_SIMPLE))
-#else
-		priv->governor == TZ_GOVERNOR_ONDEMAND) 
-#endif
-	{
+		priv->governor == TZ_GOVERNOR_ONDEMAND) {
 		trace_kgsl_pwrlevel(device, device->pwrctrl.default_pwrlevel,
 			device->pwrctrl.pwrlevels[device->pwrctrl.default_pwrlevel].gpu_freq);
 		kgsl_pwrctrl_pwrlevel_change(device,
@@ -484,25 +406,16 @@
 
 	idle = stats.total_time - stats.busy_time;
 	idle = (idle > 0) ? idle : 0;
+
 	
 	total_time = stats.total_time & 0x0FFFFFFF;
 	total_time |= (pwr->active_pwrlevel) << 28;
 
-#ifdef CONFIG_MSM_KGSL_SIMPLE_GOV
-	if (priv->governor == TZ_GOVERNOR_SIMPLE)
-		val = simple_governor(device, idle);
-	else
-		val = __secure_tz_entry(TZ_UPDATE_ID, idle, total_time);
-#else
 	val = __secure_tz_entry(TZ_UPDATE_ID, idle, total_time);
-#endif
 
-	if (val) {
+	if (val)
 		kgsl_pwrctrl_pwrlevel_change(device,
 					     pwr->active_pwrlevel + val);
-		//pr_info("TZ idle stat: %d, TZ PL: %d, TZ out: %d\n",
-		//		idle, pwr->active_pwrlevel, val);
-	}
 }
 
 static void tz_busy(struct kgsl_device *device,
